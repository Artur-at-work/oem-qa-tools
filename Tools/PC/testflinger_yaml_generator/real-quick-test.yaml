global_timeout: 43200
job_queue: 202202-29949
output_timeout: 9000
test_data:
  test_cmds: |-
    set -x

    TARGET_DEVICE_USERNAME=ubuntu
    # convenience functions
    SSH_OPTS="-o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
    # shellcheck disable=SC1054,SC2086
    _put() {{
        scp $SSH_OPTS "$1" $TARGET_DEVICE_USERNAME@"$DEVICE_IP":"$2"
    }}
    # shellcheck disable=SC1054,SC2086
    _get() {{
        scp $SSH_OPTS $TARGET_DEVICE_USERNAME@"$DEVICE_IP":"$1" "$2"
    }}
    # shellcheck disable=SC1054,SC2086
    _run() {{
        ssh -t $SSH_OPTS $TARGET_DEVICE_USERNAME@"$DEVICE_IP" "$@"
    }}
    # shellcheck disable=SC1054,SC2086
    _run_in_bg() {{
        ssh -f -t $SSH_OPTS $TARGET_DEVICE_USERNAME@"$DEVICE_IP" "$@"
    }}
    # shellcheck disable=SC1054,SC2086
    wait_for_ssh() {{
        loopcnt=0
        until timeout 120 ssh $SSH_OPTS $TARGET_DEVICE_USERNAME@"$DEVICE_IP" /bin/true
        do
            echo "Testing to see if system is back up"
            loopcnt=$((loopcnt+1))
            if [ $loopcnt -gt 40 ]; then
                echo "ERROR: Timeout waiting for ssh!"
                exit 1
            fi
            sleep 30
        done
    }}

    #sudo add-apt-repository -y ppa:checkbox-dev/beta
    #sudo apt-get update

    # Install the checkbox controller.
    # The controller has to come from the ppa:checkbox-dev/beta
    # which is equivalent to the beta channel in the snap store
    # this way the versions will match
    echo "Installing checkbox in agent container"
    if [ "False" == False ]; then
        # if we are testing using debs on the dut
        CHECKBOX_CLI_CMD="checkbox-cli"
    else
        # we are testing using snaps on the dut
        CHECKBOX_CLI_CMD="checkbox.checkbox-cli"
    fi

    dut_checkbox_installed=$(_run $CHECKBOX_CLI_CMD --version > /dev/null; echo $?)
    if [ "$dut_checkbox_installed" -eq 0 ]; then
        echo
        echo "====== TARGET DEVICE CONNECTION INFO ======"
        echo
        echo DEVICE_IP: $TARGET_DEVICE_USERNAME@"$DEVICE_IP"
        echo
        echo "==========================================="
        echo
        CHECKBOX_VERSION=$(_run $CHECKBOX_CLI_CMD --version)
        echo "Checkbox is already insatlled on DUT:"
        echo "$CHECKBOX_VERSION"
        git clone --depth=1 https://github.com/canonical/hwcert-jenkins-tools.git > /dev/null
        git clone --filter=tree:0 https://github.com/canonical/checkbox.git > /dev/null
        hwcert-jenkins-tools/version-published/checkout_to_version.py ~/checkbox "$CHECKBOX_VERSION"
        (cd checkbox/checkbox-ng || return; sudo python3 setup.py install > /dev/null)
    else
        echo "No checkbox on DUT. Installing latest"
        #sudo apt-get install -y checkbox-provider-base checkbox-ng checkbox-provider-resource checkbox-provider-certification-client plainbox-provider-pc-sanity
        #_run sudo DEBIAN_FRONTEND=noninteractive apt-get install checkbox-provider-base checkbox-ng checkbox-provider-resource checkbox-provider-certification-client plainbox-provider-pc-sanity -y
    fi
